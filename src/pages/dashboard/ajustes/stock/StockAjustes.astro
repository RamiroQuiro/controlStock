---
import MainDashboard from "../../../../components/atomos/MainDashboard.astro";
import DivBox1 from "../../../../components/atomos/DivBox1.astro";
import {
  Building2,
  MapPin,
  Package,
  Ruler,
  Tag,
  type LucideIcon,
} from "lucide-react";
import CardAjustesStock from "../components/CardAjustesStock.astro";
import db from "../../../../db";
import { and, count, eq,  sql } from "drizzle-orm";
import { categorias, ubicaciones, depositos, productos } from "../../../../db/schema";

interface StockConfigItem {
  title: string;
  description: string;
  icon: LucideIcon;
  count: number;
  color: string;
  status: "active" | "inactive" | "coming-soon";
}

const stockConfigItems: StockConfigItem[] = [
  {
    id: "categorias",
    title: "Categorías",
    description: "Organiza tus productos por categorías",
    icon: Tag,
    count: 0,
    color: "bg-blue-500",
    status: "active",
  },
  {
    id: "ubicaciones",
    title: "Ubicaciones",
    description: "Define las ubicaciones dentro de tus depósitos",
    icon: MapPin,
    count: 0,
    color: "bg-green-500",
    status: "active",
  },
  {
    id: "depositos",
    title: "Depósitos",
    description: "Gestiona tus almacenes y centros de distribución",
    icon: Building2,
    count: 0,
    color: "bg-purple-500",
    status: "active",
  },
  {
    id: "marcas",
    title: "Marcas",
    description: "Administra las marcas de tus productos",
    icon: Package,
    count: 0,
    color: "bg-orange-500",
    status: "coming-soon",
  },
  {
    id: "unidades",
    title: "Unidades de Medida",
    description: "Define las unidades de medida para tus productos",
    icon: Ruler,
    count: 0,
    color: "bg-indigo-500",
    status: "coming-soon",
  },
];
let stockConfigItemsConDatos: StockConfigItem[] = [];
let dataDB:any;
const {user}=Astro.locals
try {
const traerDataDB=async()=>{
  const productosData=(await db.select({cantidad:count(productos.id)}).from(productos).where(and(eq(productos.empresaId,user?.empresaId),eq(productos.activo,true)))).at(0)
const categoriasData=(await db.select({cantidad:count(categorias.id)}).from(categorias).where(and(eq(categorias.empresaId,user?.empresaId),eq(categorias.activo,true)))).at(0)
const ubicacionesData=(await db.select({cantidad:count(ubicaciones.id)}).from(ubicaciones).where(and(eq(ubicaciones.empresaId,user?.empresaId),eq(ubicaciones.activo,true)))).at(0)
const depositosData=(await db.select({cantidad:count(depositos.id)}).from(depositos).where(and(eq(depositos.empresaId,user?.empresaId),eq(depositos.activo,true)))).at(0)
return {categorias:categoriasData.cantidad,ubicaciones:ubicacionesData.cantidad,depositos:depositosData.cantidad,productos:productosData.cantidad}
}
 dataDB=await traerDataDB()
stockConfigItemsConDatos = stockConfigItems.map(item => ({
  ...item,
  count: dataDB[item.id]
}));
} catch (error) {
  console.log(error);
}
---

<MainDashboard h1="Configuracion Stock">
  <div class="flex flex-col gap-y-2 items-start w-full justify-between">
    <p class="text-sm text-gray-600">
      Gestiona todos los aspectos relacionados con tu inventario y depositos
    </p>
  </div>
  <div class="grid grid-cols-1 w-full my-5 md:grid-cols-4 gap-4">
    <DivBox1>
      <div class="text-2xl font-bold text-blue-600">{stockConfigItemsConDatos.find(item => item.id === 'categorias')?.count}</div>
      <div class="text-sm font-semibold text-gray-600">Categorías Activas</div>
    </DivBox1>
    <DivBox1>
      <div class="text-2xl font-bold text-green-600">{stockConfigItemsConDatos.find(item => item.id === 'ubicaciones')?.count}</div>
      <div class="text-sm font-semibold text-gray-600">Ubicaciones</div>
    </DivBox1>
    <DivBox1>
      <div class="text-2xl font-bold text-purple-600">{stockConfigItemsConDatos.find(item => item.id === 'depositos')?.count}</div>
      <div class="text-sm font-semibold text-gray-600">Depósitos</div>
    </DivBox1>
    <DivBox1>
      <div class="text-2xl font-bold text-gray-600">{dataDB.productos}</div>
      <div class="text-sm font-semibold text-gray-600">Productos Total</div>
    </DivBox1>
  </div>
  <!-- ver si colocamos algunos stats con info rapida -->
  <div class="grid grid-cols-1 w-full md:grid-cols-2 lg:grid-cols-3 gap-4">
    {stockConfigItemsConDatos.map((item) => <CardAjustesStock item={item} />)}
  </div>
</MainDashboard>
