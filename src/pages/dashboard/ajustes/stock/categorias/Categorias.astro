---
import { eq, sql } from 'drizzle-orm';
import Button1 from '../../../../../components/atomos/Button1.astro';
import DivBox1 from '../../../../../components/atomos/DivBox1.astro';
import MainDashboard from '../../../../../components/atomos/MainDashboard.astro';
import Modal from '../../../../../components/moleculas/Modal.astro';
import db from '../../../../../db';
import { categorias, productoCategorias } from '../../../../../db/schema';
import CardInfoCatUbiDep from '../../components/CardInfoCatUbiDep.astro';
import FormularioNuevaCat from '../../components/FormularioNuevaCat';
import ListarCardCategorias from './ListarCardCategorias';

interface Category {
  id: string;
  nombre: string;
  descripcion: string;
  color: string;
  activo: boolean;
  creadoPor: string;
  created_at: string;
  cantidadProductos: number;
}

let categories: Category[] = [];
let cantidadProductos: number = 0;

const { user } = Astro.locals;
---

<MainDashboard h1="Gestión de Categorías" subtitle="Gestiona de Categorías.">
  <div
    slot={'menu'}
    class="flex items-center justify-end pb-2 gap-2 pr-6 w-full"
  >
    <div class="flex gap-3">
      <Modal label="Crear" id="crearCategoria" title="Crear nueva categoría">
        <FormularioNuevaCat client:load />
      </Modal>
      <Button1
        id="btnExportarPDF"
        class="px-4 py-2 bg-primary-texto text-white rounded-lg hover:bg-primary-texto/80 transition-colors"
      >
        Exportar PDF
      </Button1>
      <Button1
        id="btnExportar"
        class="px-4 py-2 bg-primary-texto text-white rounded-lg hover:bg-primary-texto/80 transition-colors"
      >
        Exportar CSV
      </Button1>
    </div>
  </div>

  <!-- ver si colocamos algunos stats con info rapida -->
  <div class="grid grid-cols-1 w-full my-5 md:grid-cols-4 gap-4">
    <DivBox1>
      <div class="text-2xl font-bold text-blue-600">{categories.length}</div>
      <div class="text-sm font-semibold text-gray-600">Total Categorías</div>
    </DivBox1>
    <DivBox1>
      <div class="text-2xl font-bold text-green-600">
        {categories.filter((category) => category.activo).length}
      </div>
      <div class="text-sm font-semibold text-gray-600">Activas</div>
    </DivBox1>
    <DivBox1>
      <div class="text-2xl font-bold text-neutral-600">{cantidadProductos}</div>
      <div class="text-sm font-semibold text-gray-600">Total Productos</div>
    </DivBox1>
    <DivBox1>
      <div class="text-2xl font-bold text-purple-600">
        {(cantidadProductos / categories.length).toFixed(2)}
      </div>
      <div class="text-sm font-semibold text-gray-600">
        Promedio por Categoría
      </div>
    </DivBox1>
  </div>
  <ListarCardCategorias client:load />
</MainDashboard>

<script>
  import { categoriasStore } from '../../../../../context/store';

  const empresaId = document.getElementById('mainDashboard').dataset.emprsisi;
  console.log('id de la empresa', empresaId);

  const traerCategorias = async () => {
    try {
      const response = await fetch(
        `/api/categorias?empresaId=${empresaId}&all=true`
      );
      const data = await response.json();
      categoriasStore.set({ loading: false, data: data.data, error: null });
    } catch (error) {
      console.error('Error fetching categories:', error);
      categoriasStore.set({ loading: false, data: null, error: error.message });
    }
  };

  traerCategorias();

  categoriasStore.subscribe((state) => {
    console.log('Estado actual de categorias:', state);
    if (typeof window !== 'undefined') {
      localStorage.setItem('categorias', JSON.stringify(state));
    }
  });
</script>
